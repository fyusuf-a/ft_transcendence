name: cd

on:
  push:
    branches: [ master ]

jobs:
  which-image-to-build:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.diff-frontend.outcome == 'failure' || steps.diff-compose.outcome == 'failure' }}
      backend: ${{ steps.diff-backend.outcome == 'failure' || steps.diff-compose.outcome == 'failure' }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for diff in docker-compose files
        id: diff-compose
        continue-on-error: true
        # docker-compose.prod.yml is not checked for a diff because it is not used in the CI, only in a deployment
        run: |
          git diff ${{ github.event.before }} --exit-code docker-compose.yml docker-compose.override.yml > /dev/null
      - name: Check for diff in backend
        id: diff-backend
        continue-on-error: true
        run: |
          git diff ${{ github.event.before }} --exit-code backend > /dev/null
      - name: Check for diff in frontend
        id: diff-frontend
        continue-on-error: true
        run: |
          git diff ${{ github.event.before }} --exit-code frontend > /dev/null
  build-and-push-frontend:
    runs-on: ubuntu-latest
    needs: which-image-to-build
    if: needs.which-image-to-build.outputs.frontend == 'true'
    timeout-minutes: 20
    steps:
      - name: see outputs
        run: |
          echo ${{ needs.which-image-to-build.outputs.frontend }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Read environment file
        run: |
          cat .env.example | grep -v '^#' >> ${GITHUB_ENV}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: fyusufa
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: frontend-image-${{ github.sha }}
          restore-keys: frontend-image-
      - name: Build containers
        run: |
          COMPOSE_FILE=docker-compose.yml:docker-compose.override.yml docker-compose config > docker-compose.bake.yml
          docker buildx bake --set *.cache-from="type=local,src=/tmp/.buildx-cache" --set *.cache-to="type=local,dest=/tmp/.buildx-cache-new,mode=max" --file docker-compose.bake.yml frontend --load
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Push images to Dockerhub
        run: |
          docker image push fyusufa/ft_transcendence_frontend:latest
  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: which-image-to-build
    if: needs.which-image-to-build.outputs.backend == 'true'
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Read environment file
        run: |
          cat .env.example | grep -v '^#' >> ${GITHUB_ENV}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: fyusufa
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: backend-image-${{ github.sha }}
          restore-keys: backend-image-
      - name: Build containers
        run: |
          COMPOSE_FILE=docker-compose.yml:docker-compose.override.yml docker-compose config > docker-compose.bake.yml
          docker buildx bake --set *.cache-from="type=local,src=/tmp/.buildx-cache" --set *.cache-to="type=local,dest=/tmp/.buildx-cache-new,mode=max" --file docker-compose.bake.yml backend --load
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Push images to Dockerhub
        run: |
          docker image push fyusufa/ft_transcendence_backend:latest
