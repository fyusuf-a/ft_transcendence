name: build

on:
  workflow_call:
    inputs:
      module:
        required: true
        type: string
      sha:
        required: true
        type: string
    secrets:
      BACKEND_42_UID:
        required: true
      BACKEND_42_SECRET:
        required: true
      BACKEND_JWT_SECRET_KEY:
        required: true
      DB_PASSWORD:
        required: true

jobs:
  build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: early-exit
    if: needs.early-exit.outputs.status == 'false'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          lfs: 'true'
      - name: Set environment variables
        run: |
          cat .env.example | grep -v '^#' >> ${GITHUB_ENV}
          echo "BACKEND_42_UID=${{ secrets.BACKEND_42_UID }}" >> ${GITHUB_ENV}
          echo "BACKEND_42_SECRET=${{ secrets.BACKEND_42_SECRET }}" >> ${GITHUB_ENV}
          echo "BACKEND_JWT_SECRET_KEY=${{ secrets.BACKEND_JWT_SECRET_KEY }}" >> ${GITHUB_ENV}
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ${GITHUB_ENV}
      - uses: actions/setup-node@v3
        with:
          node-version: "${{ env.node_version }}"
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install dependencies
        run: |
          cd ${{ inputs.module }}
          npm ci
      - name: Lint
        run: |
          cd ${{ inputs.module }}
          npm run lint -- --no-fix --max-warnings=0
      - name: Unit tests
        run: |
          cd ${{ inputs.module }}
          npm run test:unit
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: docker-images-test-${{ inputs.sha }}
          restore-keys: docker-images-test-
      - name: Build Containers
        run: |
          docker buildx bake --set *.cache-from="type=local,src=/tmp/.buildx-cache" --set *.cache-to="type=local,dest=/tmp/.buildx-cache-new" --file docker-compose.yml --load
      #- name: E2E Test
        #run: |
          #docker-compose up -d
          #docker exec ft_transcendence_backend_1 npm run test:e2e
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
