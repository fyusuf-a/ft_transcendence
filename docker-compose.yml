version: '3.4'

services:
  db:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    volumes:
      - pgdb-data:/var/lib/postgresql/data
      - ./sql/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql

  backend:
    image: fyusufa/ft_transcendence_backend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
      # the port for debugging
      - 9229:9229
    volumes:
      - ./backend:/tmp/app
      - ./dtos:/tmp/dtos
      - ./tsconfig.json:/tmp/tsconfig.json
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      FRONTEND_HOST: ${FRONTEND_HOST}
      FRONTEND_PORT: ${FRONTEND_PORT}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      JWT_SECRET_KEY: ${BACKEND_JWT_SECRET_KEY}
      WATCH: ${BACKEND_DEBUG}
      DISABLE_AUTHENTICATION: ${DISABLE_AUTHENTICATION}
      BACKEND_42_UID: ${BACKEND_42_UID}
      BACKEND_42_SECRET: ${BACKEND_42_SECRET}
      BACKEND_HOST: ${BACKEND_HOST}
    build:
      context: .
      dockerfile: backend/${BACKEND_DOCKERFILE}
      args:
          NODE_IMAGE: ${NODE_IMAGE}
          BACKEND_PORT: ${BACKEND_PORT}
    restart: unless-stopped
    depends_on:
      - db

  frontend:
    image: fyusufa/ft_transcendence_frontend
    profiles: ["frontend"]
    ports:
      - ${FRONTEND_PORT}:80
      # the following port is necessary for vite hot module reload (HMR)
      - 4443:4443
    volumes:
      - ./frontend:/app
      - ./dtos:/dtos
      - ./tsconfig.json:/tsconfig.json
    environment:
      VITE_DISABLE_AUTHENTICATION: ${DISABLE_AUTHENTICATION}
      VITE_BACKEND_HOST: ${BACKEND_HOST}
      VITE_BACKEND_PORT: ${BACKEND_PORT}
    build:
      context: .
      dockerfile: frontend/${FRONTEND_DOCKERFILE}
      args:
          NODE_IMAGE: ${NODE_IMAGE}
          NGINX_IMAGE: ${NGINX_IMAGE}
          BACKEND_HOST: ${BACKEND_HOST}
          BACKEND_PORT: ${BACKEND_PORT}
    restart: unless-stopped
    depends_on:
      - backend

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8888:8080
    depends_on:
      - db
    profiles: ["debug"]

volumes:
  pgdb-data:
