version: '3.4'

services:

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - pgdb-data:/var/lib/postgresql/data
      - ./sql/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql

  adminer:
    image: adminer
    restart: always
    ports:
      - 8888:8080
    depends_on:
      - db
    profiles: ["debug"]

  backend:
    build:
        context: ./backend
        args:
            NODE_IMAGE: ${NODE_IMAGE}
    image: nest
    ports:
      - 8080:3000
    working_dir: /app
    volumes:
      - ./backend:/app
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      WATCH: ${BACKEND_DEBUG}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      DISABLE_AUTHENTICATION: ${DISABLE_AUTHENTICATION}
    depends_on:
      - db

  frontend:
    build:
        context: ./frontend
        target: ${FRONTEND_TARGET:-production}
        args:
            NODE_IMAGE: ${NODE_IMAGE}
    image: vue
    ports:
      - 8000:80
    volumes:
      - ./frontend:/app
    profiles: ["frontend"]
    depends_on:
      - backend

volumes:
  pgdb-data:
